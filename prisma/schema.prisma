// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  repositories Repository[]
  teams        TeamMember[]
  urgentRequests UrgentRequest[]
}

model Team {
  id          String   @id @default(cuid())
  name        String
  plan        String   @default("Free") // Free, Pro, Enterprise
  members     TeamMember[]
  repositories Repository[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Repository {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
}

model TeamMember {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  role      String   @default("member") // owner, admin, member
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UrgentRequest {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  title     String
  status    String   @default("pending") // pending, approved, rejected
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
